/* Generated By:JJTree&JavaCC: Do not edit this line. ExpressionCCParserConstants.java */
package org.smile.expression.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ExpressionCCParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int WHITESPACE = 1;
  /** RegularExpression Id. */
  int NOT_EQAUL = 2;
  /** RegularExpression Id. */
  int GREAT_EQAUL = 3;
  /** RegularExpression Id. */
  int LESS_EQAUL = 4;
  /** RegularExpression Id. */
  int LESS_THAN = 5;
  /** RegularExpression Id. */
  int GREAT_THAN = 6;
  /** RegularExpression Id. */
  int EQAUL = 7;
  /** RegularExpression Id. */
  int SET = 8;
  /** RegularExpression Id. */
  int K_IS = 9;
  /** RegularExpression Id. */
  int INSTANCEOF = 10;
  /** RegularExpression Id. */
  int LIKE = 11;
  /** RegularExpression Id. */
  int K_BOOLEAN = 12;
  /** RegularExpression Id. */
  int K_NULL = 13;
  /** RegularExpression Id. */
  int K_QUESTION = 14;
  /** RegularExpression Id. */
  int K_COLON = 15;
  /** RegularExpression Id. */
  int K_SEMICOLON = 16;
  /** RegularExpression Id. */
  int K_NOT = 17;
  /** RegularExpression Id. */
  int K_OR = 18;
  /** RegularExpression Id. */
  int K_AND = 19;
  /** RegularExpression Id. */
  int F_PREFIX = 20;
  /** RegularExpression Id. */
  int S_LONG = 21;
  /** RegularExpression Id. */
  int S_INTEGERSTR = 22;
  /** RegularExpression Id. */
  int S_DOUBLESTR = 23;
  /** RegularExpression Id. */
  int S_FIELD = 24;
  /** RegularExpression Id. */
  int S_PARAMTER = 25;
  /** RegularExpression Id. */
  int LETTER = 26;
  /** RegularExpression Id. */
  int LETTER_DIGIT = 27;
  /** RegularExpression Id. */
  int DIGIT = 28;
  /** RegularExpression Id. */
  int S_QUOTED_CHAR = 29;
  /** RegularExpression Id. */
  int S_QUOTED_IDENTIFIER = 30;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<WHITESPACE>",
    "<NOT_EQAUL>",
    "<GREAT_EQAUL>",
    "<LESS_EQAUL>",
    "\"<\"",
    "\">\"",
    "\"==\"",
    "\"=\"",
    "<K_IS>",
    "\" instanceof \"",
    "<LIKE>",
    "<K_BOOLEAN>",
    "\"null\"",
    "\"?\"",
    "\":\"",
    "\";\"",
    "<K_NOT>",
    "<K_OR>",
    "<K_AND>",
    "<F_PREFIX>",
    "<S_LONG>",
    "<S_INTEGERSTR>",
    "<S_DOUBLESTR>",
    "<S_FIELD>",
    "<S_PARAMTER>",
    "<LETTER>",
    "<LETTER_DIGIT>",
    "<DIGIT>",
    "<S_QUOTED_CHAR>",
    "<S_QUOTED_IDENTIFIER>",
    "\"(\"",
    "\")\"",
    "\"-\"",
    "\"|\"",
    "\"&\"",
    "\"+\"",
    "\",\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"^\"",
  };

}
